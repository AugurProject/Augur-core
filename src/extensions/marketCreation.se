# Copyright (C) 2015 Forecast Foundation OU, full GPL notice in LICENSE

inset('../macros/externs.sem')
inset('../macros/durations.sem')

def createScalarMarket(branch: address, endTime: int256, feePerEthInWei: int256, denominationToken: address, minDisplayPrice: int256, maxDisplayPrice: int256, automatedReporterAddress: address, topic: int256):
    numOutcomes = 2
    payoutDenominator = maxDisplayPrice - minDisplayPrice
    reportingWindow = branch.getReportingWindowByMarketEndTime(endTime, automatedReporterAddress != 0)
    market = reportingWindow.createNewMarket(endTime, numOutcomes, payoutDenominator, feePerEthInWei, denominationToken, msg.sender, minDisplayPrice, maxDisplayPrice, automatedReporterAddress, topic, value = msg.value)
    return(market)

def createCategoricalMarket(branch: address, endTime: int256, numOutcomes: int256, feePerEthInWei: int256, denominationToken: address, automatedReporterAddress: address, topic: int256):
    payoutDenominator = numOutcomes
    minDisplayPrice = 0
    maxDisplayPrice = 10**18
    reportingWindow = branch.getReportingWindowByMarketEndTime(endTime, automatedReporterAddress != 0)
    market = reportingWindow.createNewMarket(endTime, numOutcomes, payoutDenominator, feePerEthInWei, denominationToken, msg.sender, minDisplayPrice, maxDisplayPrice, automatedReporterAddress, topic, value = msg.value)
    return(market)
