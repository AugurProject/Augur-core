# This software (Augur) allows buying && selling event outcomes in ethereum
# Copyright (C) 2015 Forecast Foundation OU
#    This program is free software; you can redistribute it &&/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is free software: you can redistribute it &&/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
# Any questions please contact joey@augur.net

import createEvent as CREATEEVENT
import createMarket as CREATEMARKET

def createSingleEventMarket(branch, description:str, expirationBlock, minValue, maxValue, numOutcomes, alpha, initialLiquidity, tradingFee, forkSelection):
    # with eventID = CREATEEVENT.createEvent(branch, description, expirationBlock, minValue, maxValue, numOutcomes):
    #     with marketID = CREATEMARKET.createMarket(branch, description, alpha, initialLiquidity, tradingFee, [eventID], forkSelection):
    #         return(marketID)
    return(CREATEMARKET.createMarket(branch, description, alpha, initialLiquidity, tradingFee, [CREATEEVENT.createEvent(branch, description, expirationBlock, minValue, maxValue, numOutcomes)], forkSelection))
