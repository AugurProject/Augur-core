#### must be first data members to match delegator.se
data controller
data controllerLookupName
####

inset('../macros/require.sem')

data collection[](hasValue, value)
data count
data owner
data initialized

def any():
    if (self.initialized):
        require(msg.sender == self.owner or msg.sender == self)

def initialize(owner: address):
    require(not self.initialized)
    self.initialized = 1
    self.owner = owner
    return(1)

def addMapItem(key, value):
    if (self.contains(key)):
        return(0)
    self.collection[key].hasValue = 1
    self.collection[key].value = value
    self.count += 1
    return(1)

def remove(key):
    if (not self.contains(key)):
        return (0)
    self.collection[key].hasValue = 0
    self.collection[key].value = 0
    self.count -= 1
    return(1)

def addOrUpdateMapItem(key, value):
    if (self.contains(key)):
        self.remove(key)
    return self.addMapItem(key, value)

def contains(key):
    return(self.collection[key].hasValue)

def getValueOrZero(key):
    return(self.collection[key].value)

def getValue(key):
    require(self.contains(key))
    return(self.collection[key].value)

def count():
    return(self.count)
